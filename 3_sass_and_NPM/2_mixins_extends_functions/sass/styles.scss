* {
  margin: 0;
  padding: 0;
}

$color-primary: #f9ed69;
$color-secondary: #f08a5d;
$color-tertiary: #b83b5e;
$color-text-dark: #333;
$color-text-white: #eee;

$width-button: 150px;

// mixin is a re-usable code
// for example for a clearfix
// We declare mixing by @mixing keyword and giving it a name
@mixin clearfix {
  &::after {
    content: '';
    clear: both;
    display: table;
  }
}

// Function - functions return a value
@function divide($a, $b) {
  @return $a / b;
}

nav {
  margin: divide(60, 2) * 1px;
  background-color: $color-primary;

  // We use mixin by @include keyword
  @include clearfix;
}

// Passing a argument to a mixin
@mixin style-link-text($color) {
  text-decoration: none;
  text-transform: uppercase;
  color: $color;
}

.navigation {
  float: left;
  list-style: none;

  li {
    display: inline-block;
    margin-left: 30px;

    &:first-child {
      margin: 0;
    }

    a {
      @include style-link-text($color-text-dark);
    }
  }
}

.button {
  float: right;
}

// Placeholder/extends
// Placeholders are defined by % sign
// When slectors have same theme
%btn-placeholder {
  padding: 10px;
  display: inline-block;
  text-align: center;
  border-radius: 100px;
  width: $width-button;

  // We can have more DRY code thenks to mixins when we identify a re-occuring css code:
  @include style-link-text($color-text-white);
  // text-decoration: none;
  // text-transform: uppercase;
  // color: $color-text-white;;
}

.btn-main:link,
.btn-hot:link {
  // we use placeholder by @extend keyword
  @extend %btn-placeholder;
}

a.btn-main,
a.btn-hot {
  color: red;
  color: $color-text-white;
}

.btn-main {
  &:link {
    background-color: $color-secondary;
  }

  &:hover {
    background-color: darken($color-secondary, 15%);
  }
}

.btn-hot {
  &:link {
    background-color: $color-tertiary;
  }

  &:hover {
    background-color: darken($color-tertiary, 15%);
  }
}
